apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluent-bit
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://fluent.github.io/helm-charts
    chart: fluent-bit
    targetRevision: 0.48.0
    helm:
      values: |
        image:
          repository: cr.fluentbit.io/fluent/fluent-bit
          pullPolicy: IfNotPresent

        rbac:
          create: true

        config:
          service: |
            [SERVICE]
                Daemon Off
                Flush {{ .Values.flush | default 1 }}
                Log_Level {{ .Values.logLevel | default "info" }}
                Parsers_File /fluent-bit/etc/parsers.conf
                Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
                HTTP_Server On
                HTTP_Listen 0.0.0.0
                HTTP_Port {{ .Values.metricsPort | default 2020 }}
                Health_Check On

          inputs: |
            [INPUT]
                Name tail
                Path /var/log/containers/*.log
                multiline.parser docker, cri
                Tag kube.*
                Mem_Buf_Limit 5MB
                Skip_Long_Lines On

          filters: |
            [FILTER]
                Name kubernetes
                Match kube.*
                Merge_Log On
                Keep_Log Off
                K8S-Logging.Parser On
                K8S-Logging.Exclude On

            # Spring 로그 필터는 일단 주석 처리하여 모든 로그가 들어가도록 합니다.
            # [FILTER]
            #     Name grep
            #     Match kube.*
            #     # kubernetes.labels.app 필드에 'spring' 문자열이 포함된 로그만 허용합니다.
            #     Regex kubernetes.labels.app spring

          outputs: |
            [OUTPUT]
                Name            es
                Match           *
                Host            my-es-cluster-es-http.logging.svc.cluster.local
                Port            9200
                Logstash_Format On
                Logstash_Prefix fluent-bit
                Replace_Dots    On
                Retry_Limit     False
                Buffer_Size     64k
                # HTTPS 및 인증 설정
                tls             On
                tls.verify      Off
                HTTP_User       elastic
                HTTP_Passwd     ${ELASTIC_PASSWORD}
                Suppress_Type_Name On

          customParsers: |
            [PARSER]
                Name docker_no_time
                Format json
                Time_Keep Off
                Time_Key time
                Time_Format %Y-%m-%dT%H:%M:%S.%L

        logLevel: info

        # 비밀번호를 Kubernetes Secret에서 환경변수로 주입
        env:
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-es-cluster-es-elastic-user
                key: elastic

        # Fluent Bit 메트릭스 포트를 NodePort로 노출
        service:
          type: NodePort
          port: 2020
          nodePort: 30020

  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true